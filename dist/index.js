!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(window,function(){return function(e){function t(t){for(var r,a,u=t[0],l=t[1],s=t[2],f=0,d=[];f<u.length;f++)a=u[f],i[a]&&d.push(i[a][0]),i[a]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(c&&c(t);d.length;)d.shift()();return o.push.apply(o,s||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,u=1;u<n.length;u++){var l=n[u];0!==i[l]&&(r=!1)}r&&(o.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},i={2:0},o=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},a.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var u=window.webpackJsonp=window.webpackJsonp||[],l=u.push.bind(u);u.push=t,u=u.slice();for(var s=0;s<u.length;s++)t(u[s]);var c=l;return o.push([126,0]),n()}({126:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.urlEmbedModule=t.urlEmbed=void 0,n(179);var r=o(n(98)),i=o(n(96));function o(e){return e&&e.__esModule?e:{default:e}}t.urlEmbed=r.default,t.urlEmbedModule=i.default},33:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"ql-video-embed",props:{url:{type:String,default:""},meta:{type:Object,default:function(){return{}}}},computed:{embedUrl:function(){return"Vimeo"===this.meta.site_name?this.meta.player.url:"YouTube"===this.meta.site_name?"https://www.youtube.com/embed/"+this.meta.url.split("watch?v=")[1]+"?feature=oembed":""}}}},34:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"ql-embed-source-image",props:{image:{type:String,default:""}},data:function(){return{hasError:!1}}}},35:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"ql-embed-source-icon",props:{icon:{type:String,default:""}},data:function(){return{hasError:!1}}}},36:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(88)),i=a(n(85)),o=a(n(133));function a(e){return e&&e.__esModule?e:{default:e}}t.default={name:"ql-link-embed",components:{SourceIcon:r.default,SourceImage:i.default},props:{url:{type:String,default:""},meta:{type:Object,default:function(){return{}}}},computed:{description:function(){return(0,o.default)(this.meta.description,{length:256})},publisher:function(){return this.meta.site_name||(0,o.default)(this.meta.url,{length:64})}}}},37:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(n(91)),i=o(n(80));function o(e){return e&&e.__esModule?e:{default:e}}t.default={name:"ql-embed-item",components:{LinkEmbed:r.default,VideoEmbed:i.default},props:{url:{type:String,default:""},meta:{type:Object,default:function(){return{}}}},computed:{componentType:function(){return"video"===this.meta.embed.type?"video-embed":"link"===this.meta.embed.type?"link-embed":"default-embed"}},mounted:function(){console.log(this.meta)}}},52:function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return i});var r=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"ql-embed-item"},[t(this.componentType,{tag:"component",attrs:{url:this.url,meta:this.meta}})],1)},i=[]},53:function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return i});var r=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"ql-video-embed"},[t("iframe",{attrs:{src:this.embedUrl,frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})])},i=[]},54:function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return i});var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"ql-link-embed"},[n("a",{staticClass:"ql-embed-link",attrs:{href:e.meta.url,target:"_blank"}},[n("span",{staticClass:"ql-embed-content"},[n("span",{staticClass:"ql-embed-description"},[e._v(e._s(e.description))]),e._v(" "),n("span",{staticClass:"ql-embed-source"},[n("source-icon",{attrs:{icon:e.meta.icon.any}}),e._v(" "),n("small",{staticClass:"ql-embed-publisher"},[e._v(e._s(e.publisher))])],1)]),e._v(" "),n("span",{staticClass:"ql-embed-image"},[n("source-image",{attrs:{image:e.meta.image.url}})],1)])])},i=[]},55:function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return i});var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("span",{staticClass:"ql-embed-source-image"},[e.image&&!e.hasError?n("img",{attrs:{src:e.image},on:{error:function(t){e.hasError=!0}}}):n("span",[n("svg",{attrs:{viewBox:"0 0 80 80",version:"1.1"}},[n("g",{attrs:{stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd"}},[n("path",{attrs:{d:"M8,8 L36,8 L36,0 L8,0 C3.6,0 0,3.6 0,8 L0,36 L8,36 L8,8 L8,8 Z M32,44 L16,64 L64,64 L52,48 L43.88,58.84 L32,44 L32,44 Z M60,26 C60,22.68 57.32,20 54,20 C50.68,20 48,22.68 48,26 C48,29.32 50.68,32 54,32 C57.32,32 60,29.32 60,26 L60,26 Z M72,0 L44,0 L44,8 L72,8 L72,36 L80,36 L80,8 C80,3.6 76.4,0 72,0 L72,0 Z M72,72 L44,72 L44,80 L72,80 C76.4,80 80,76.4 80,72 L80,44 L72,44 L72,72 L72,72 Z M8,44 L0,44 L0,72 C0,76.4 3.6,80 8,80 L36,80 L36,72 L8,72 L8,44 L8,44 Z",id:"Shape",fill:"currentcolor"}})])])])])},i=[]},56:function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return i});var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("span",{staticClass:"ql-embed-source-icon"},[e.icon&&!e.hasError?n("img",{attrs:{src:e.icon},on:{error:function(t){e.hasError=!0}}}):n("span",[n("svg",{attrs:{viewBox:"0 0 8 12",version:"1.1"}},[n("g",{attrs:{stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd"}},[n("polygon",{attrs:{id:"Shape",fill:"currentcolor",points:"0 10.59 4.58 6 0 1.41 1.41 0 7.41 6 1.41 12"}})])])])])},i=[]},78:function(e,t,n){(e.exports=n(24)(!1)).push([e.i,".ql-video-embed{position:relative;width:100%;padding-top:56%}.ql-video-embed iframe{position:absolute;top:0;left:0;border:0;margin:0;padding:0;width:100%;height:100%}",""])},79:function(e,t,n){var r=n(78);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,n(23).default)("59e71145",r,!0,{})},80:function(e,t,n){"use strict";n.r(t);var r=n(33),i=n.n(r);for(var o in r)"default"!==o&&function(e){n.d(t,e,function(){return r[e]})}(o);var a=n(53),u=n(9);var l=function(e){n(79)},s=Object(u.a)(i.a,a.a,a.b,!1,l,null,null);t.default=s.exports},83:function(e,t,n){(e.exports=n(24)(!1)).push([e.i,".ql-embed-source-image{height:100%;display:flex;align-items:center;justify-content:center}.ql-embed-source-image img{max-height:100%;width:auto;object-fit:contain;justify-self:right}.ql-embed-source-image span{background-color:#fff;min-height:100px;width:100%;display:flex;align-items:center;justify-content:center;padding:10px}.ql-embed-source-image span svg{width:60px;height:auto;color:#eee}",""])},84:function(e,t,n){var r=n(83);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,n(23).default)("1bea7281",r,!0,{})},85:function(e,t,n){"use strict";n.r(t);var r=n(34),i=n.n(r);for(var o in r)"default"!==o&&function(e){n.d(t,e,function(){return r[e]})}(o);var a=n(55),u=n(9);var l=function(e){n(84)},s=Object(u.a)(i.a,a.a,a.b,!1,l,null,null);t.default=s.exports},86:function(e,t,n){(e.exports=n(24)(!1)).push([e.i,".ql-embed-source-icon{margin-right:3px;display:inline-block;width:16px;height:16px}.ql-embed-source-icon img{height:100%;width:100%}.ql-embed-source-icon span{height:100%;width:100%;display:inline-flex;align-items:center;justify-content:center;background-color:#999;border-radius:50%;color:#fff}.ql-embed-source-icon span svg{width:5px;height:auto}",""])},87:function(e,t,n){var r=n(86);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,n(23).default)("0b4b9f1e",r,!0,{})},88:function(e,t,n){"use strict";n.r(t);var r=n(35),i=n.n(r);for(var o in r)"default"!==o&&function(e){n.d(t,e,function(){return r[e]})}(o);var a=n(56),u=n(9);var l=function(e){n(87)},s=Object(u.a)(i.a,a.a,a.b,!1,l,null,null);t.default=s.exports},89:function(e,t,n){(e.exports=n(24)(!1)).push([e.i,".ql-link-embed .ql-embed-link,.ql-link-embed .ql-embed-link:hover,.ql-link-embed .ql-embed-link:link{color:gray;text-decoration:none}.ql-link-embed .ql-embed-link{display:flex;position:relative;background-color:#fbfafa;border:1px solid #eeeded;font-size:.9em;max-height:200px}.ql-link-embed .ql-embed-content{width:70%;flex:0 0 70%;padding:15px;display:flex;flex-direction:column}.ql-link-embed .ql-embed-description{flex:1 1 0}.ql-link-embed .ql-embed-source{margin-top:15px;display:flex;align-items:center}.ql-link-embed .ql-embed-image{width:30%;flex:0 0 30%;padding:15px;background-color:#ccc}",""])},90:function(e,t,n){var r=n(89);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,n(23).default)("446e60be",r,!0,{})},91:function(e,t,n){"use strict";n.r(t);var r=n(36),i=n.n(r);for(var o in r)"default"!==o&&function(e){n.d(t,e,function(){return r[e]})}(o);var a=n(54),u=n(9);var l=function(e){n(90)},s=Object(u.a)(i.a,a.a,a.b,!1,l,null,null);t.default=s.exports},92:function(e,t,n){(e.exports=n(24)(!1)).push([e.i,"",""])},93:function(e,t,n){var r=n(92);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,n(23).default)("9322a6fe",r,!0,{})},94:function(e,t,n){"use strict";n.r(t);var r=n(37),i=n.n(r);for(var o in r)"default"!==o&&function(e){n.d(t,e,function(){return r[e]})}(o);var a=n(52),u=n(9);var l=function(e){n(93)},s=Object(u.a)(i.a,a.a,a.b,!1,l,null,null);t.default=s.exports},96:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{!r&&u.return&&u.return()}finally{if(i)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=c(n(144)),u=c(n(141)),l=c(n(134)),s=c(n(94));function c(e){return e&&e.__esModule?e:{default:e}}function f(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){return function r(i,o){try{var a=t[i](o),u=a.value}catch(e){return void n(e)}if(!a.done)return Promise.resolve(u).then(function(e){r("next",e)},function(e){r("throw",e)});e(u)}("next")})}}l.default.component(s.default);var d={urlRegex:/^https?:\/\/[\S]+$/gm},p=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.quill=t,n=n||{},this.options=i({},d,n),this.registerTypeListener(),this.registerPasteListener()}return o(e,[{key:"registerPasteListener",value:function(){var e=this;this.quill.clipboard.addMatcher(Node.TEXT_NODE,function(t,n){if("string"==typeof t.data){var r=t.data.match(e.options.urlRegex);if(r&&r.length>0){var i=new a.default,o=t.data;r.forEach(function(t){var n=o.split(t),r=n.shift(),a=e.buildUrlEmbed(t);i.insert(r),i.insert(a),o=n.join(t)}),i.insert(o),n.ops=i.ops}return n}})}},{key:"registerTypeListener",value:function(){var e=this;this.quill.on("text-change",function(t){var n=t.ops;if(!(!n||n.length<1||n.length>2)){var r=n[n.length-1];r.insert&&"string"==typeof r.insert&&r.insert.match(/\s/)&&e.checkTextForUrl()}})}},{key:"checkTextForUrl",value:function(){var e=this.quill.getSelection();if(e){var t=this.quill.getLeaf(e.index),n=r(t,1)[0];if(n.text){console.log(n.text);var i=n.text.match(this.options.urlRegex);if(i&&i.length){var o=n.text.length,a=e.index-o;this.textToUrl(a,i[0])}}}}},{key:"textToUrl",value:function(){var e=f(regeneratorRuntime.mark(function e(t,n){var r,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.buildUrlEmbed(n);case 2:r=e.sent,i=(new a.default).retain(t).delete(n.length).insert(r),this.quill.updateContents(i);case 5:case"end":return e.stop()}},e,this)}));return function(t,n){return e.apply(this,arguments)}}()},{key:"buildUrlEmbed",value:function(e){var t={urlEmbed:{url:e,html:e}};return this.addMetaInfo(e),t}},{key:"addMetaInfo",value:function(){var e=f(regeneratorRuntime.mark(function e(t){var n,r,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getMetaInfo(t);case 2:if(n=e.sent,r=n.data,(i=document.querySelectorAll('[data-url-embed="'+t+'"]'))&&i.length){e.next=7;break}return e.abrupt("return");case 7:i.forEach(function(e){var n=document.createElement("div");e.innerHTML="",e.appendChild(n);new l.default({el:n,render:function(e){return e(s.default,{props:{url:t,meta:r}})}})});case 8:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"getMetaInfo",value:function(){var e=f(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=encodeURIComponent(t),n=this.options.metaApi+"/embeds?url="+t,e.next=4,u.default.get(n);case 4:return r=e.sent,e.abrupt("return",r);case 6:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()}]),e}();t.default=p},98:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(97);var a=((r=o)&&r.__esModule?r:{default:r}).default.import("blots/block/embed"),u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a),i(t,null,[{key:"create",value:function(e){var n=e.url,r=e.html,i=function e(t,n,r){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,n);if(void 0===i){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,r)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(r):void 0}(t.__proto__||Object.getPrototypeOf(t),"create",this).call(this);return i.setAttribute("data-url-embed",n),i.setAttribute("contenteditable","false"),i.insertAdjacentHTML("beforeend",r),i}},{key:"value",value:function(e){return e.getAttribute("data-url-embed")}}]),t}();u.blotName="urlEmbed",u.className="url-embed",u.tagName="div",t.default=u}})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,